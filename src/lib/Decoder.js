export default class Decoder {

	 static WASM_BASE64 = "";
	 static wasmConfig = {
		env: {
			emscripten_notify_memory_growth: function (index) {
				console.log(`Memory size increased: ${index}`);
			},
		},
	};

	 static async initWasmModule() {
		try {
			const res = await WebAssembly.instantiate(
				Buffer.from(Decoder.WASM_BASE64, "base64"),
				Decoder.wasmConfig,
			);
			return res.instance
		} catch (error) {
			console.error(error);
		}
	}

	static decodeZstd(compressedData, wasmInstance) {
		if (!wasmInstance) {
			throw new Error("WASM Module not initialized");
		}

		const {
			malloc,
			free,
			ZSTD_decompress,
			ZSTD_findDecompressedSize,
			ZSTD_isError,
		} = wasmInstance.exports;

		const compressedSize = compressedData.length;
		const compressedPtr = malloc(compressedSize);
		new Uint8Array(
			wasmInstance.exports.memory.buffer,
			compressedPtr,
			compressedSize,
		).set(compressedData);

		const potentialDecompressedSize = ZSTD_findDecompressedSize(
			compressedPtr,
			compressedSize,
		);
		const decompressedSize =
			potentialDecompressedSize !== -1
				? potentialDecompressedSize
				: compressedSize * 2; // Adjusted fallback size

		const decompressedPtr = malloc(decompressedSize);
		const result = ZSTD_decompress(
			decompressedPtr,
			decompressedSize,
			compressedPtr,
			compressedSize,
		);

		if (ZSTD_isError(result)) {
			throw new Error("Decompression failed");
		}

		const decompressedData = new Uint8Array(
			wasmInstance.exports.memory.buffer,
			decompressedPtr,
			result,
		);
		const output = decompressedData.slice();

		free(compressedPtr);
		free(decompressedPtr);

		// console.log(output);

		return output;
	}
	static parseDecompressedData(data, parsedData) {
		parsedData.stride = Decoder.parseStride(data);
		parsedData.global_ac_count_withpos = Decoder.parseGlobalAcCountWithPos(data);
		parsedData.globeIndex = Decoder.parseGlobeIndex(data);
		parsedData.limits = Decoder.parseLimits(data);
		parsedData.messages = Decoder.parseMessages(data);
		parsedData.receiver = Decoder.parseReceiver(data);
		parsedData.binCraftVersion = Decoder.parseBinCraftVersion(data);
		parsedData.aircraft = Decoder.parseAircraft(data, parsedData.binCraftVersion);

		return parsedData;
	}

	static parseTimestamp(data) {
		const u32 = new Uint32Array(data.buffer, 0, 12);
		return u32[0] / 1000 + u32[1] * 4294967.296;
	}

	static parseStride(data) {
		const u32 = new Uint32Array(data.buffer, 0, 12);
		return u32[2];
	}

	static parseGlobalAcCountWithPos(data) {
		const u32 = new Uint32Array(data.buffer, 0, 12);
		return u32[3];
	}

	static parseGlobeIndex(data) {
		const u32 = new Uint32Array(data.buffer, 0, 12);
		return u32[4];
	}

	static parseLimits(data) {
		const limits = new Int16Array(data.buffer, 20, 4);
		return {
			south: limits[0],
			west: limits[1],
			north: limits[2],
			east: limits[3],
		};
	}

	static parseMessages(data) {
		const u32 = new Uint32Array(data.buffer, 0, 12);
		return u32[7];
	}

	static parseReceiver(data) {
		const stride = Decoder.parseStride(data);
		const s32 = new Int32Array(data.buffer, 0, stride / 4);
		const receiver_lat = s32[8] / 1e6;
		const receiver_lon = s32[9] / 1e6;

		return {
			receiver_lat,
			receiver_lon,
		};
	}

	static parseBinCraftVersion(data) {
		const u32 = new Uint32Array(data.buffer, 0, 12);
		return u32[10];
	}



	static parseHex(s32) {
		const t = s32 & (1 << 24);
		const hex = (s32 & ((1 << 24) - 1)).toString(16).padStart(6, "0");
		return t ? `~${hex}` : hex;
	}

	static parseCategory(u8) {
		return u8[64] ? u8[64].toString(16).toUpperCase() : undefined;
	}

	static parseNic(u8) {
		return u8[65];
	}

	static parseNavModes(u8) {
		const navModes = u8[66];
		if (navModes) {
			const modes = [];
			if (navModes & 1) modes.push("autopilot");
			if (navModes & 2) modes.push("vnav");
			if (navModes & 4) modes.push("alt_hold");
			if (navModes & 8) modes.push("approach");
			if (navModes & 16) modes.push("lnav");
			if (navModes & 32) modes.push("tcas");
			return modes;
		}
		return undefined;
	}

	static parseEmergency(u8) {
		return u8[67] & 15;
	}

	static parseType(u8) {
		const type = (u8[67] & 240) >> 4;
		switch (type) {
			case 0:
				return "adsb_icao";
			case 1:
				return "adsb_icao_nt";
			case 2:
				return "adsr_icao";
			case 3:
				return "tisb_icao";
			case 4:
				return "adsc";
			case 5:
				return "mlat";
			case 6:
				return "other";
			case 7:
				return "mode_s";
			case 8:
				return "adsb_other";
			case 9:
				return "adsr_other";
			case 10:
				return "tisb_trackfile";
			case 11:
				return "tisb_other";
			case 12:
				return "mode_ac";
			default:
				return "unknown";
		}
	}

	static parseAirground(u8) {
		return u8[68] & 15;
	}

	static parseNavAltitudeSrc(u8) {
		return (u8[68] & 240) >> 4;
	}

	static parseSilType(u8) {
		return u8[69] & 15;
	}

	static parseAdsbVersion(u8) {
		return (u8[69] & 240) >> 4;
	}

	static parseAdsrVersion(u8) {
		return u8[70] & 15;
	}

	static parseTisbVersion(u8) {
		return (u8[70] & 240) >> 4;
	}

	static parseDbFlags(u16) {
		return u16[43];
	}

	static parseFlight(u8) {
		let flight = "";
		for (let i = 78; u8[i] && i < 86; i++) {
			flight += String.fromCharCode(u8[i]);
		}
		return flight;
	}

	static parseT(u8) {
		let t = "";
		for (let i = 88; u8[i] && i < 92; i++) {
			t += String.fromCharCode(u8[i]);
		}
		return t;
	}

	static parseRc(u16) {
		return u16[30];
	}

	static parseR(u8) {
		let r = "";
		for (let i = 92; u8[i] && i < 104; i++) {
			r += String.fromCharCode(u8[i]);
		}
		return r;
	}

	static parseReceiverCount(u8) {
		return u8[104];
	}

	static parseRssi(u8) {
		const rssi = (10 * Math.log((u8[105] * u8[105]) / 65025 + 1.125e-5)) / Math.log(10);
		return rssi;
	}


	static parseSquawk(u16) {
		const s = u16.toString(16).padStart(4, '0');
		if (s[0] > '9') {
			return String(parseInt(s[0], 16)) + s[1] + s[2] + s[3];
		} else {
			return s;
		}
	}

	static parseExtraFlags(u8) {
		return u8[106];
	}

	static parseNogps(extraFlags) {
		return extraFlags & 1;
	}

	static parseVersion(type, ac) {
		const type4 = type.slice(0, 4);
		if (type4 === "adsb") {
			return ac.adsb_version;
		} else if (type4 === "adsr") {
			return ac.adsr_version;
		} else if (type4 === "tisb") {
			return ac.tisb_version;
		}
		return undefined;
	}

	static parseRId(u32, stride, binCraftVersion) {
		if (binCraftVersion >= 20240218 && stride === 116) {
			return u32[27].toString(16).padStart(8, "0");
		} else if (stride === 112) {
			return u32[27].toString(16).padStart(8, "0");
		}
		return undefined;
	}

	static parseAircraft(data, binCraftVersion) {
		const aircraft = [];
		const stride = Decoder.parseStride(data);
		const buffer = data.buffer;

		for (let off = stride; off < buffer.byteLength; off += stride) {
			const ac = {};
			const u32 = new Uint32Array(buffer, off, stride / 4);
			const s32 = new Int32Array(buffer, off, stride / 4);
			const u16 = new Uint16Array(buffer, off, stride / 2);
			const s16 = new Int16Array(buffer, off, stride / 2);
			const u8 = new Uint8Array(buffer, off, stride);


			ac.hex = Decoder.parseHex(s32[0]);
			ac.seen = Decoder.parseConditionalValue(binCraftVersion >= 20240218, u16[3] / 10, s32[1] / 10);
			ac.seen_pos = Decoder.parseConditionalValue(binCraftVersion >= 20240218, s32[27] / 10, u16[2] / 10);
			ac.lon = Decoder.parseConditionalValue(u8[73] & 64, undefined, s32[2] / 1e6);
			ac.lat = Decoder.parseConditionalValue(u8[73] & 64, undefined, s32[3] / 1e6);
			ac.baro_rate = Decoder.parseConditionalValue(u8[75] & 1, undefined, s16[8] * 8);
			ac.geom_rate = Decoder.parseConditionalValue(u8[75] & 2, undefined, s16[9] * 8);
			ac.alt_baro = Decoder.parseConditionalValue(u8[73] & 16, undefined, s16[10] * 25);
			ac.alt_geom = Decoder.parseConditionalValue(u8[73] & 32, undefined, s16[11] * 25);
			ac.nav_altitude_mcp = Decoder.parseConditionalValue(u8[76] & 64, undefined, u16[12] * 4);
			ac.nav_altitude_fms = Decoder.parseConditionalValue(u8[76] & 128, undefined, u16[13] * 4);
			ac.nav_qnh = Decoder.parseConditionalValue(u8[76] & 32, undefined, s16[14] / 10);
			ac.nav_heading = Decoder.parseConditionalValue(u8[77] & 2, undefined, s16[15] / 90);
			ac.squawk = Decoder.parseConditionalValue(u8[76] & 4, undefined, Decoder.parseSquawk(u16[16]));
			ac.gs = Decoder.parseConditionalValue(u8[73] & 128, undefined, s16[17] / 10);
			ac.mach = Decoder.parseConditionalValue(u8[74] & 4, undefined, s16[18] / 1000);
			ac.roll = Decoder.parseConditionalValue(u8[74] & 32, undefined, s16[19] / 100);
			ac.track = Decoder.parseConditionalValue(u8[74] & 8, undefined, s16[20] / 90);
			ac.track_rate = Decoder.parseConditionalValue(u8[74] & 16, undefined, s16[21] / 100);
			ac.mag_heading = Decoder.parseConditionalValue(u8[74] & 64, undefined, s16[22] / 90);
			ac.true_heading = Decoder.parseConditionalValue(u8[74] & 128, undefined, s16[23] / 90);
			ac.wd = Decoder.parseConditionalValue(u8[77] & 16, undefined, s16[24]);
			ac.ws = Decoder.parseConditionalValue(u8[77] & 16, undefined, s16[25]);
			ac.oat = Decoder.parseConditionalValue(u8[77] & 32, undefined, s16[26]);
			ac.tat = Decoder.parseConditionalValue(u8[77] & 32, undefined, s16[27]);
			ac.tas = Decoder.parseConditionalValue(u8[74] & 2, undefined, u16[28]);
			ac.ias = Decoder.parseConditionalValue(u8[74] & 1, undefined, u16[29]);
			ac.rc = Decoder.parseRc(u16[30]);
			ac.category = Decoder.parseCategory(u8);
			ac.nic = Decoder.parseNic(u8);
			ac.nav_modes = Decoder.parseNavModes(u8);
			ac.emergency = Decoder.parseEmergency(u8);
			ac.type = Decoder.parseType(u8);
			ac.airground = Decoder.parseAirground(u8);
			ac.nav_altitude_src = Decoder.parseNavAltitudeSrc(u8);
			ac.sil_type = Decoder.parseSilType(u8);
			ac.adsb_version = Decoder.parseAdsbVersion(u8);
			ac.adsr_version = Decoder.parseAdsrVersion(u8);
			ac.tisb_version = Decoder.parseTisbVersion(u8);
			ac.nac_p = Decoder.parseConditionalValue(u8[75] & 32, undefined, u8[71] & 15);
			ac.nac_v = Decoder.parseConditionalValue(u8[75] & 64, undefined, (u8[71] & 240) >> 4);
			ac.sil = Decoder.parseConditionalValue(u8[75] & 128, undefined, u8[72] & 3);
			ac.gva = Decoder.parseConditionalValue(u8[76] & 1, undefined, (u8[72] & 12) >> 2);
			ac.sda = Decoder.parseConditionalValue(u8[76] & 2, undefined, (u8[72] & 48) >> 4);
			ac.nic_a = Decoder.parseConditionalValue(u8[75] & 4, undefined, (u8[72] & 64) >> 6);
			ac.nic_c = Decoder.parseConditionalValue(u8[75] & 8, undefined, (u8[72] & 128) >> 7);
			ac.flight = Decoder.parseConditionalValue(u8[73] & 8, undefined, Decoder.parseFlight(u8));
			ac.dbFlags = Decoder.parseDbFlags(u16);
			ac.t = Decoder.parseT(u8);
			ac.r = Decoder.parseR(u8);
			ac.receiverCount = Decoder.parseReceiverCount(u8);
			ac.rssi = Decoder.parseRssi(u8);
			ac.extraFlags = Decoder.parseExtraFlags(u8);
			ac.nogps = Decoder.parseNogps(ac.extraFlags);
			ac.nic_baro = Decoder.parseConditionalValue(u8[75] & 16, undefined, u8[73] & 1);
			ac.alert1 = Decoder.parseConditionalValue(u8[77] & 8, undefined, u8[73] & 2);
			ac.spi = Decoder.parseConditionalValue(u8[76] & 16, undefined, u8[73] & 4);
			ac.version = Decoder.parseVersion(ac.type, ac);
			ac.rId = Decoder.parseRId(u32, stride, binCraftVersion);

			if (ac.airground === 1) ac.alt_baro = "ground";

			aircraft.push(ac);
		}

		return aircraft;
	}

	static parseConditionalValue(condition, valueIfFalse, valueIfTrue) {
		return condition ? valueIfTrue : valueIfFalse;
	}

	static async decode(data) {
		const wasmInstance =  await Decoder.initWasmModule();
		const decompressedData = Decoder.decodeZstd(new Uint8Array(data), wasmInstance);
		const parsedData = {};
		return Decoder.parseDecompressedData(decompressedData, parsedData);
	}

}